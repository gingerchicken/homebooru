version: "3.9"
   
services:
  db:
    image: postgres
    volumes:
      - ${ACTUAL_DB_PATH}:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  web:
    build: .
    volumes:
      - ${ACTUAL_STORAGE_PATH}:${BOORU_STORAGE_PATH}
      - ${ACTUAL_STATIC_PATH}:${STATIC_ROOT}

      # Migrations
      - ./booru/migrations:/app/booru/migrations
      - ./scanner/migrations:/app/scanner/migrations

      # Fixtures
      - ./additional-fixtures:/app/additional-fixtures
    environment:
      # Database
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      # - LOAD_FIXTURES
      # - DB_MIGRATE

      # Secret
      # - ROLL_SECRET
      # - SECRET_KEY # Feel free to change this in production to something static and secure!

      # Booru
      - BOORU_STORAGE_PATH
      - BOORU_AUTOMATIC_RATING_ENABLED

      # Production
      - DEBUG=False

      # Static
      # - INSTALL_JQUERY

      # Directory Scanning
      # - DIRECTORY_SCAN_ENABLED
    depends_on:
      - db
  nginx:
    build: .nginx/
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ${ACTUAL_STORAGE_PATH}:/storage/
      - ${ACTUAL_STATIC_PATH}:/static/
    
      - .nginx/sec/validate.conf:/etc/nginx/snippets/sec-validate.conf                # Allows you to specify custom hosts (e.g. mybooru.org, 192.168.1.42, etc.)
      - .nginx/sec/ratelimit.conf:/etc/nginx/snippets/sec-ratelimit.conf              # Ratelimit requests to the site
      - .nginx/sec/apply-ratelimit.conf:/etc/nginx/snippets/sec-apply-ratelimit.conf  # Enables SSL
      - .nginx/conf/:/etc/nginx/conf.d/booru.conf                                     # Allows for custom nginx config

      # SSL/TLS Certificates (Uncomment if you want to use your own SSL/TLS certs)
      # - ${SSL_KEY_PATH}:/certs/booru.key
      # - ${SSL_CERT_PATH}:/certs/booru.crt
      # - ${SSL_DH_PATH}:/certs/dhparam.pem
    depends_on:
      - web
  redis:
    image: redis
  worker:
    build: .
    volumes:
      - ${ACTUAL_STORAGE_PATH}:${BOORU_STORAGE_PATH}
    command: "/app/.celery/worker.sh"
    depends_on:
      - db
      - redis
      - web
    environment:
      - CELERY_WORKER=True

      # - DIRECTORY_SCAN_ENABLED

      # Database
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

      # Booru
      - BOORU_STORAGE_PATH=/storage/
      - BOORU_AUTOMATIC_RATING_ENABLED

      # - SECRET_KEY
      # - ROLL_SECRET
  beat:
    build: .
    command: "/app/.celery/beat.sh"
    depends_on:
      - db
      - redis
      - web
    environment:
      - CELERY_BEAT=True

      # - DIRECTORY_SCAN_ENABLED

      # Database
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}